{"id":"../node_modules/tone/build/esm/effect/BitCrusher.worklet.js","dependencies":[{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\build\\esm\\effect\\BitCrusher.worklet.js.map","includedInParent":true,"mtime":1596323958910},{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\Tone\\effect\\BitCrusher.worklet.ts","includedInParent":true,"mtime":1596323958574},{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\package.json","includedInParent":true,"mtime":1596323959438},{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\package.json","includedInParent":true,"mtime":1596323959121},{"name":"../core/worklet/SingleIOProcessor.worklet","loc":{"line":1,"column":7},"parent":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\build\\esm\\effect\\BitCrusher.worklet.js","resolved":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\build\\esm\\core\\worklet\\SingleIOProcessor.worklet.js"},{"name":"../core/worklet/WorkletGlobalScope","loc":{"line":2,"column":34},"parent":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\build\\esm\\effect\\BitCrusher.worklet.js","resolved":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\build\\esm\\core\\worklet\\WorkletGlobalScope.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bitCrusherWorklet = exports.workletName = void 0;\n\nrequire(\"../core/worklet/SingleIOProcessor.worklet\");\n\nvar _WorkletGlobalScope = require(\"../core/worklet/WorkletGlobalScope\");\n\nconst workletName = \"bit-crusher\";\nexports.workletName = workletName;\nconst bitCrusherWorklet =\n/* javascript */\n`\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\nexports.bitCrusherWorklet = bitCrusherWorklet;\n(0, _WorkletGlobalScope.registerProcessor)(workletName, bitCrusherWorklet);"},"sourceMaps":{"js":{"mappings":[{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":12,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":12,"column":6}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":24},"generated":{"line":12,"column":17}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":27},"generated":{"line":12,"column":20}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":12,"column":33}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":7},"generated":{"line":14,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":14,"column":6}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":30},"generated":{"line":14,"column":23}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":33},"generated":{"line":15,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":49},"generated":{"line":16,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":6,"column":7},"generated":{"line":35,"column":1}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":18},"generated":{"line":37,"column":43}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":37,"column":54}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":31},"generated":{"line":37,"column":56}},{"source":"../../../Tone/effect/BitCrusher.worklet.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":37,"column":73}}],"sources":{"../../../Tone/effect/BitCrusher.worklet.ts":"import \"../core/worklet/SingleIOProcessor.worklet\";\r\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\r\n\r\nexport const workletName = \"bit-crusher\";\r\n\r\nexport const bitCrusherWorklet = /* javascript */`\r\n\tclass BitCrusherWorklet extends SingleIOProcessor {\r\n\r\n\t\tstatic get parameterDescriptors() {\r\n\t\t\treturn [{\r\n\t\t\t\tname: \"bits\",\r\n\t\t\t\tdefaultValue: 12,\r\n\t\t\t\tminValue: 1,\r\n\t\t\t\tmaxValue: 16,\r\n\t\t\t\tautomationRate: 'k-rate'\r\n\t\t\t}];\r\n\t\t}\r\n\r\n\t\tgenerate(input, _channel, parameters) {\r\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\r\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\r\n\t\t\treturn val;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nregisterProcessor(workletName, bitCrusherWorklet);\r\n"},"lineCount":null}},"error":null,"hash":"2de02420d5a3d39f0e416a063c519842","cacheData":{"env":{}}}