{"id":"../node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js","dependencies":[{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\build\\esm\\source\\oscillator\\OscillatorInterface.js.map","includedInParent":true,"mtime":1596323959083},{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\Tone\\source\\oscillator\\OscillatorInterface.ts","includedInParent":true,"mtime":1596323958673},{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\package.json","includedInParent":true,"mtime":1596323959438},{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\package.json","includedInParent":true,"mtime":1596323959121},{"name":"tslib","loc":{"line":1,"column":26},"parent":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\build\\esm\\source\\oscillator\\OscillatorInterface.js","resolved":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tslib\\tslib.es6.js"},{"name":"../../core/context/OfflineContext","loc":{"line":2,"column":31},"parent":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\build\\esm\\source\\oscillator\\OscillatorInterface.js","resolved":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\tone\\build\\esm\\core\\context\\OfflineContext.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateWaveform = generateWaveform;\n\nvar _tslib = require(\"tslib\");\n\nvar _OfflineContext = require(\"../../core/context/OfflineContext\");\n\n/**\r\n * Render a segment of the oscillator to an offline context and return the results as an array\r\n */\nfunction generateWaveform(instance, length) {\n  return (0, _tslib.__awaiter)(this, void 0, void 0, function* () {\n    const duration = length / instance.context.sampleRate;\n    const context = new _OfflineContext.OfflineContext(1, duration, instance.context.sampleRate);\n    const clone = new instance.constructor(Object.assign(instance.get(), {\n      // should do 2 iterations\n      frequency: 2 / duration,\n      // zero out the detune\n      detune: 0,\n      context\n    })).toDestination();\n    clone.start(0);\n    const buffer = yield context.render();\n    return buffer.getChannelData(0);\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":107,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":110,"column":6},"generated":{"line":15,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":110,"column":22},"generated":{"line":15,"column":9}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":110,"column":6},"generated":{"line":15,"column":25}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":110,"column":39},"generated":{"line":15,"column":26}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":110,"column":6},"generated":{"line":15,"column":34}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":110,"column":54},"generated":{"line":15,"column":36}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":110,"column":6},"generated":{"line":15,"column":42}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":110,"column":68},"generated":{"line":15,"column":44}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":1},"generated":{"line":17,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":7},"generated":{"line":17,"column":10}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":15},"generated":{"line":17,"column":18}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":18},"generated":{"line":17,"column":21}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":24},"generated":{"line":17,"column":27}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":27},"generated":{"line":17,"column":30}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":35},"generated":{"line":17,"column":38}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":36},"generated":{"line":17,"column":39}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":27},"generated":{"line":17,"column":46}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":44},"generated":{"line":17,"column":47}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":111,"column":1},"generated":{"line":17,"column":57}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":1},"generated":{"line":18,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":7},"generated":{"line":18,"column":10}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":14},"generated":{"line":18,"column":17}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":17},"generated":{"line":18,"column":20}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":21},"generated":{"line":18,"column":24}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":17},"generated":{"line":18,"column":54}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":36},"generated":{"line":18,"column":55}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":17},"generated":{"line":18,"column":56}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":39},"generated":{"line":18,"column":58}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":17},"generated":{"line":18,"column":66}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":49},"generated":{"line":18,"column":68}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":57},"generated":{"line":18,"column":76}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":58},"generated":{"line":18,"column":77}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":49},"generated":{"line":18,"column":84}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":66},"generated":{"line":18,"column":85}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":17},"generated":{"line":18,"column":95}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":112,"column":1},"generated":{"line":18,"column":96}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":19,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":7},"generated":{"line":19,"column":10}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":12},"generated":{"line":19,"column":15}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":15},"generated":{"line":19,"column":18}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":19},"generated":{"line":19,"column":22}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":27},"generated":{"line":19,"column":30}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":28},"generated":{"line":19,"column":31}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":15},"generated":{"line":19,"column":42}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":40},"generated":{"line":19,"column":43}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":46},"generated":{"line":19,"column":49}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":47},"generated":{"line":19,"column":50}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":40},"generated":{"line":19,"column":56}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":54},"generated":{"line":19,"column":57}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":62},"generated":{"line":19,"column":65}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":63},"generated":{"line":19,"column":66}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":54},"generated":{"line":19,"column":69}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":40},"generated":{"line":19,"column":71}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":70},"generated":{"line":19,"column":73}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":20,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":115,"column":2},"generated":{"line":21,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":115,"column":2},"generated":{"line":21,"column":6}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":115,"column":11},"generated":{"line":21,"column":15}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":115,"column":13},"generated":{"line":21,"column":17}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":115,"column":17},"generated":{"line":21,"column":21}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":70},"generated":{"line":21,"column":29}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":116,"column":2},"generated":{"line":22,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":117,"column":2},"generated":{"line":23,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":117,"column":2},"generated":{"line":23,"column":6}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":117,"column":8},"generated":{"line":23,"column":12}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":117,"column":10},"generated":{"line":23,"column":14}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":70},"generated":{"line":23,"column":15}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":118,"column":2},"generated":{"line":24,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":118,"column":2},"generated":{"line":24,"column":6}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":70},"generated":{"line":25,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":40},"generated":{"line":25,"column":5}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":15},"generated":{"line":25,"column":6}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":119,"column":5},"generated":{"line":25,"column":8}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":15},"generated":{"line":25,"column":21}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":25,"column":23}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":1},"generated":{"line":26,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":1},"generated":{"line":26,"column":4}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":6},"generated":{"line":26,"column":9}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":7},"generated":{"line":26,"column":10}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":1},"generated":{"line":26,"column":15}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":13},"generated":{"line":26,"column":16}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":120,"column":1},"generated":{"line":26,"column":17}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":27,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":7},"generated":{"line":27,"column":10}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":13},"generated":{"line":27,"column":16}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":16},"generated":{"line":27,"column":19}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":22},"generated":{"line":27,"column":25}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":29},"generated":{"line":27,"column":32}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":30},"generated":{"line":27,"column":33}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":22},"generated":{"line":27,"column":39}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":121,"column":1},"generated":{"line":27,"column":41}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":122,"column":1},"generated":{"line":28,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":28,"column":11}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":28,"column":17}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":122,"column":15},"generated":{"line":28,"column":18}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":28,"column":32}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":122,"column":30},"generated":{"line":28,"column":33}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":28,"column":34}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":122,"column":1},"generated":{"line":28,"column":35}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":123,"column":1},"generated":{"line":29,"column":0}},{"source":"../../../../Tone/source/oscillator/OscillatorInterface.ts","name":null,"original":{"line":123,"column":1},"generated":{"line":30,"column":0}}],"sources":{"../../../../Tone/source/oscillator/OscillatorInterface.ts":"import { AudioRange, Cents, Degrees, Frequency, Positive } from \"../../core/type/Units\";\r\nimport { Omit } from \"../../core/util/Interface\";\r\nimport { Signal } from \"../../signal/Signal\";\r\nimport { SourceOptions } from \"../Source\";\r\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\r\n\r\n/**\r\n * The common interface of all Oscillators\r\n */\r\nexport interface ToneOscillatorInterface {\r\n\r\n\t/**\r\n\t * The oscillator type without the partialsCount appended to the end\r\n\t * @example\r\n\t * const osc = new Tone.Oscillator();\r\n\t * osc.type = \"sine2\";\r\n\t * console.log(osc.baseType); // \"sine\"\r\n\t */\r\n\tbaseType: OscillatorType | \"pulse\" | \"pwm\";\r\n\r\n\t/**\r\n\t * The oscillator's type. Also capable of setting the first x number of partials of the oscillator. \r\n\t * For example: \"sine4\" would set be the first 4 partials of the sine wave and \"triangle8\" would \r\n\t * set the first 8 partials of the triangle wave.\r\n\t * @example\r\n\t * return Tone.Offline(() => {\r\n\t * \tconst osc = new Tone.Oscillator().toDestination().start();\r\n\t * \tosc.type = \"sine2\";\r\n\t * }, 0.1, 1);\r\n\t */\r\n\ttype: ExtendedToneOscillatorType;\r\n\r\n\t/**\r\n\t * The frequency value of the oscillator\r\n\t * @example\r\n\t * const osc = new Tone.FMOscillator(\"Bb4\").toDestination().start();\r\n\t * osc.frequency.rampTo(\"D2\", 3);\r\n\t */\r\n\treadonly frequency: Signal<\"frequency\">;\r\n\r\n\t/**\r\n\t * The detune value in cents (100th of a semitone).\r\n\t * @example\r\n\t * const osc = new Tone.PulseOscillator(\"F3\").toDestination().start();\r\n\t * // pitch it 1 octave = 12 semitones = 1200 cents\r\n\t * osc.detune.setValueAtTime(-1200, Tone.now());\r\n\t * osc.detune.setValueAtTime(1200, Tone.now() + 0.5);\r\n\t * osc.detune.linearRampToValueAtTime(0, Tone.now() + 1);\r\n\t * osc.stop(Tone.now() + 1.5);\r\n\t */\r\n\treadonly detune: Signal<\"cents\">;\r\n\r\n\t/**\r\n\t * The phase is the starting position within the oscillator's cycle. For example\r\n\t * a phase of 180 would start halfway through the oscillator's cycle. \r\n\t * @example\r\n\t * return Tone.Offline(() => {\r\n\t * \tconst osc = new Tone.Oscillator({\r\n\t * \t\tfrequency: 20,\r\n\t * \t\tphase: 90\r\n\t * \t}).toDestination().start();\r\n\t * }, 0.1, 1);\r\n\t */\r\n\tphase: Degrees;\r\n\r\n\t/**\r\n\t * The partials describes the relative amplitude of each of the harmonics of the oscillator. \r\n\t * The first value in the array is the first harmonic (i.e. the fundamental frequency), the \r\n\t * second harmonic is an octave up, the third harmonic is an octave and a fifth, etc. The resulting\r\n\t * oscillator output is composed of a sine tone at the relative amplitude at each of the harmonic intervals. \r\n\t * \r\n\t * Setting this value will automatically set the type to \"custom\".\r\n\t * The value is an empty array when the type is not \"custom\".\r\n\t * @example\r\n\t * const osc = new Tone.Oscillator(\"F3\").toDestination().start();\r\n\t * setInterval(() => {\r\n\t * \t// generate 8 random partials\r\n\t * \tosc.partials = new Array(8).map(() => Math.random());\r\n\t * }, 1000);\r\n\t */\r\n\tpartials: number[];\r\n\r\n\t/**\r\n\t * 'partialCount' offers an alternative way to set the number of used partials.\r\n\t * When partialCount is 0, the maximum number of partials are used when representing\r\n\t * the waveform using the periodicWave. When 'partials' is set, this value is\r\n\t * not settable, but equals the length of the partials array. A square wave wave\r\n\t * is composed of only odd harmonics up through the harmonic series. Partial count\r\n\t * can limit the number of harmonics which are used to generate the waveform.\r\n\t * @example\r\n\t * const osc = new Tone.Oscillator(\"C3\", \"square\").toDestination().start();\r\n\t * osc.partialCount = 1;\r\n\t * setInterval(() => {\r\n\t * \tosc.partialCount++;\r\n\t * \tconsole.log(osc.partialCount);\r\n\t * }, 500);\r\n\t */\r\n\tpartialCount?: number;\r\n\r\n\t/**\r\n\t * Returns an array of values which represents the waveform.\r\n\t * @param length The length of the waveform to return\r\n\t */\r\n\tasArray(length: number): Promise<Float32Array>;\r\n}\r\n\r\n/**\r\n * Render a segment of the oscillator to an offline context and return the results as an array\r\n */\r\nexport async function generateWaveform(instance: any, length: number): Promise<Float32Array> {\r\n\tconst duration = length / instance.context.sampleRate;\r\n\tconst context = new OfflineContext(1, duration, instance.context.sampleRate);\r\n\tconst clone = new instance.constructor(Object.assign(instance.get(), {\r\n\t\t// should do 2 iterations\r\n\t\tfrequency: 2 / duration,\r\n\t\t// zero out the detune\r\n\t\tdetune: 0,\r\n\t\tcontext\r\n\t})).toDestination();\r\n\tclone.start(0);\r\n\tconst buffer = await context.render();\r\n\treturn buffer.getChannelData(0);\r\n}\r\n\r\n/**\r\n * Oscillators with partials\r\n */\r\ntype SineWithPartials =\r\n\t\"sine1\" | \"sine2\" | \"sine3\" | \"sine4\" | \"sine5\" | \"sine6\" | \"sine7\" | \"sine8\" | \"sine9\" |\r\n\t\"sine10\" | \"sine11\" | \"sine12\" | \"sine13\" | \"sine14\" | \"sine15\" | \"sine16\" | \"sine17\" | \"sine18\" | \"sine19\" |\r\n\t\"sine20\" | \"sine21\" | \"sine22\" | \"sine23\" | \"sine24\" | \"sine25\" | \"sine26\" | \"sine27\" | \"sine28\" | \"sine29\" |\r\n\t\"sine30\" | \"sine31\" | \"sine32\";\r\n\r\ntype SquareWithPartials =\r\n\t\"square1\" | \"square2\" | \"square3\" | \"square4\" | \"square5\" | \"square6\" | \"square7\" | \"square8\" | \"square9\" |\r\n\t\"square10\" | \"square11\" | \"square12\" | \"square13\" | \"square14\" | \"square15\" | \"square16\" | \"square17\" | \"square18\" | \"square19\" |\r\n\t\"square20\" | \"square21\" | \"square22\" | \"square23\" | \"square24\" | \"square25\" | \"square26\" | \"square27\" | \"square28\" | \"square29\" |\r\n\t\"square30\" | \"square31\" | \"square32\";\r\n\r\ntype SawtoothWithPartials =\r\n\t\"sawtooth1\" | \"sawtooth2\" | \"sawtooth3\" | \"sawtooth4\" | \"sawtooth5\" | \"sawtooth6\" | \"sawtooth7\" | \"sawtooth8\" | \"sawtooth9\" |\r\n\t\"sawtooth10\" | \"sawtooth11\" | \"sawtooth12\" | \"sawtooth13\" | \"sawtooth14\" | \"sawtooth15\" | \"sawtooth16\" | \"sawtooth17\" | \"sawtooth18\" | \"sawtooth19\" |\r\n\t\"sawtooth20\" | \"sawtooth21\" | \"sawtooth22\" | \"sawtooth23\" | \"sawtooth24\" | \"sawtooth25\" | \"sawtooth26\" | \"sawtooth27\" | \"sawtooth28\" | \"sawtooth29\" |\r\n\t\"sawtooth30\" | \"sawtooth31\" | \"sawtooth32\";\r\n\r\ntype TriangleWithPartials =\r\n\t\"triangle1\" | \"triangle2\" | \"triangle3\" | \"triangle4\" | \"triangle5\" | \"triangle6\" | \"triangle7\" | \"triangle8\" | \"triangle9\" |\r\n\t\"triangle10\" | \"triangle11\" | \"triangle12\" | \"triangle13\" | \"triangle14\" | \"triangle15\" | \"triangle16\" | \"triangle17\" | \"triangle18\" | \"triangle19\" |\r\n\t\"triangle20\" | \"triangle21\" | \"triangle22\" | \"triangle23\" | \"triangle24\" | \"triangle25\" | \"triangle26\" | \"triangle27\" | \"triangle28\" | \"triangle29\" |\r\n\t\"triangle30\" | \"triangle31\" | \"triangle32\";\r\n\r\ntype TypeWithPartials = SineWithPartials | SquareWithPartials | TriangleWithPartials | SawtoothWithPartials;\r\n\r\ninterface BaseOscillatorOptions extends SourceOptions {\r\n\tfrequency: Frequency;\r\n\tdetune: Cents;\r\n\tphase: Degrees;\r\n}\r\n\r\nexport type NonCustomOscillatorType = Exclude<OscillatorType, \"custom\">;\r\n\r\ntype AllNonCustomOscillatorType = NonCustomOscillatorType | TypeWithPartials;\r\n\r\nexport type ToneOscillatorType = AllNonCustomOscillatorType | \"custom\";\r\n\r\nexport type ExtendedToneOscillatorType = ToneOscillatorType | \"pwm\" | \"pulse\";\r\n\r\n/**\r\n * Oscillator Interfaces\r\n */\r\ninterface ToneCustomOscillatorOptions extends BaseOscillatorOptions {\r\n\ttype: \"custom\";\r\n\tpartials: number[];\r\n}\r\n\r\ninterface ToneTypeOscillatorOptions extends BaseOscillatorOptions {\r\n\ttype: NonCustomOscillatorType;\r\n\tpartialCount?: number;\r\n}\r\n\r\ninterface TonePartialOscillatorOptions extends BaseOscillatorOptions {\r\n\ttype: TypeWithPartials;\r\n}\r\n\r\nexport type ToneOscillatorConstructorOptions = ToneCustomOscillatorOptions | ToneTypeOscillatorOptions | TonePartialOscillatorOptions;\r\n\r\nexport interface ToneOscillatorOptions extends BaseOscillatorOptions {\r\n\ttype: ToneOscillatorType;\r\n\tpartialCount: number;\r\n\tpartials: number[];\r\n}\r\n\r\n/**\r\n * FMOscillator Interface\r\n */\r\ninterface FMBaseOscillatorOptions extends BaseOscillatorOptions {\r\n\tharmonicity: Positive;\r\n\tmodulationIndex: Positive;\r\n\tmodulationType: AllNonCustomOscillatorType;\r\n}\r\n\r\ninterface FMCustomOscillatorOptions extends FMBaseOscillatorOptions {\r\n\ttype: \"custom\";\r\n\tpartials: number[];\r\n}\r\n\r\ninterface FMTypeOscillatorOptions extends FMBaseOscillatorOptions {\r\n\ttype: NonCustomOscillatorType;\r\n\tpartialsCount?: number;\r\n}\r\n\r\ninterface FMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\r\n\ttype: TypeWithPartials;\r\n}\r\n\r\nexport type FMConstructorOptions = FMTypeOscillatorOptions | FMCustomOscillatorOptions | FMPartialsOscillatorOptions;\r\n\r\nexport interface FMOscillatorOptions extends ToneOscillatorOptions {\r\n\tharmonicity: Positive;\r\n\tmodulationIndex: Positive;\r\n\tmodulationType: AllNonCustomOscillatorType;\r\n}\r\n\r\n/**\r\n * AMOscillator Interface\r\n */\r\ninterface AMBaseOscillatorOptions extends BaseOscillatorOptions {\r\n\tharmonicity: Positive;\r\n\tmodulationType: AllNonCustomOscillatorType;\r\n}\r\n\r\ninterface AMCustomOscillatorOptions extends AMBaseOscillatorOptions {\r\n\ttype: \"custom\";\r\n\tpartials: number[];\r\n}\r\n\r\ninterface AMTypeOscillatorOptions extends AMBaseOscillatorOptions {\r\n\ttype: NonCustomOscillatorType;\r\n\tpartialsCount?: number;\r\n}\r\n\r\ninterface AMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\r\n\ttype: TypeWithPartials;\r\n}\r\n\r\nexport type AMConstructorOptions = AMCustomOscillatorOptions | AMTypeOscillatorOptions | AMPartialsOscillatorOptions;\r\n\r\nexport interface AMOscillatorOptions extends ToneOscillatorOptions {\r\n\tharmonicity: Positive;\r\n\tmodulationType: AllNonCustomOscillatorType;\r\n}\r\n/**\r\n * FatOscillator\r\n */\r\ninterface FatBaseOscillatorOptions extends BaseOscillatorOptions {\r\n\tspread: Cents;\r\n\tcount: Positive;\r\n}\r\n\r\ninterface FatCustomOscillatorOptions extends FatBaseOscillatorOptions {\r\n\ttype: \"custom\";\r\n\tpartials: number[];\r\n}\r\n\r\ninterface FatTypeOscillatorOptions extends FatBaseOscillatorOptions {\r\n\ttype: NonCustomOscillatorType;\r\n\tpartialCount?: number;\r\n}\r\n\r\ninterface FatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\r\n\ttype: TypeWithPartials;\r\n}\r\n\r\nexport type FatConstructorOptions = FatCustomOscillatorOptions | FatTypeOscillatorOptions | FatPartialsOscillatorOptions;\r\n\r\nexport interface FatOscillatorOptions extends ToneOscillatorOptions {\r\n\tspread: Cents;\r\n\tcount: Positive;\r\n}\r\n\r\n/**\r\n * Pulse Oscillator\r\n */\r\nexport interface PulseOscillatorOptions extends BaseOscillatorOptions {\r\n\ttype: \"pulse\";\r\n\twidth: AudioRange;\r\n}\r\n\r\n/**\r\n * PWM Oscillator\r\n */\r\nexport interface PWMOscillatorOptions extends BaseOscillatorOptions {\r\n\ttype: \"pwm\";\r\n\tmodulationFrequency: Frequency;\r\n}\r\n\r\n/**\r\n * OMNI OSCILLATOR\r\n */\r\n\r\n/**\r\n * FM Oscillators with partials\r\n */\r\ntype FMSineWithPartials =\r\n\t\"fmsine1\" | \"fmsine2\" | \"fmsine3\" | \"fmsine4\" | \"fmsine5\" | \"fmsine6\" | \"fmsine7\" | \"fmsine8\" | \"fmsine9\" |\r\n\t\"fmsine10\" | \"fmsine11\" | \"fmsine12\" | \"fmsine13\" | \"fmsine14\" | \"fmsine15\" | \"fmsine16\" | \"fmsine17\" | \"fmsine18\" | \"fmsine19\" |\r\n\t\"fmsine20\" | \"fmsine21\" | \"fmsine22\" | \"fmsine23\" | \"fmsine24\" | \"fmsine25\" | \"fmsine26\" | \"fmsine27\" | \"fmsine28\" | \"fmsine29\" |\r\n\t\"fmsine30\" | \"fmsine31\" | \"fmsine32\";\r\n\r\ntype FMSquareWithPartials =\r\n\t\"fmsquare1\" | \"fmsquare2\" | \"fmsquare3\" | \"fmsquare4\" | \"fmsquare5\" | \"fmsquare6\" | \"fmsquare7\" | \"fmsquare8\" | \"fmsquare9\" |\r\n\t\"fmsquare10\" | \"fmsquare11\" | \"fmsquare12\" | \"fmsquare13\" | \"fmsquare14\" | \"fmsquare15\" | \"fmsquare16\" | \"fmsquare17\" | \"fmsquare18\" | \"fmsquare19\" |\r\n\t\"fmsquare20\" | \"fmsquare21\" | \"fmsquare22\" | \"fmsquare23\" | \"fmsquare24\" | \"fmsquare25\" | \"fmsquare26\" | \"fmsquare27\" | \"fmsquare28\" | \"fmsquare29\" |\r\n\t\"fmsquare30\" | \"fmsquare31\" | \"fmsquare32\";\r\n\r\ntype FMSawtoothWithPartials =\r\n\t\"fmsawtooth1\" | \"fmsawtooth2\" | \"fmsawtooth3\" | \"fmsawtooth4\" | \"fmsawtooth5\" | \"fmsawtooth6\" | \"fmsawtooth7\" | \"fmsawtooth8\" | \"fmsawtooth9\" |\r\n\t\"fmsawtooth10\" | \"fmsawtooth11\" | \"fmsawtooth12\" | \"fmsawtooth13\" | \"fmsawtooth14\" | \"fmsawtooth15\" | \"fmsawtooth16\" | \"fmsawtooth17\" | \"fmsawtooth18\" | \"fmsawtooth19\" |\r\n\t\"fmsawtooth20\" | \"fmsawtooth21\" | \"fmsawtooth22\" | \"fmsawtooth23\" | \"fmsawtooth24\" | \"fmsawtooth25\" | \"fmsawtooth26\" | \"fmsawtooth27\" | \"fmsawtooth28\" | \"fmsawtooth29\" |\r\n\t\"fmsawtooth30\" | \"fmsawtooth31\" | \"fmsawtooth32\";\r\n\r\ntype FMTriangleWithPartials =\r\n\t\"fmtriangle1\" | \"fmtriangle2\" | \"fmtriangle3\" | \"fmtriangle4\" | \"fmtriangle5\" | \"fmtriangle6\" | \"fmtriangle7\" | \"fmtriangle8\" | \"fmtriangle9\" |\r\n\t\"fmtriangle10\" | \"fmtriangle11\" | \"fmtriangle12\" | \"fmtriangle13\" | \"fmtriangle14\" | \"fmtriangle15\" | \"fmtriangle16\" | \"fmtriangle17\" | \"fmtriangle18\" | \"fmtriangle19\" |\r\n\t\"fmtriangle20\" | \"fmtriangle21\" | \"fmtriangle22\" | \"fmtriangle23\" | \"fmtriangle24\" | \"fmtriangle25\" | \"fmtriangle26\" | \"fmtriangle27\" | \"fmtriangle28\" | \"fmtriangle29\" |\r\n\t\"fmtriangle30\" | \"fmtriangle31\" | \"fmtriangle32\";\r\n\r\ntype FMTypeWithPartials = FMSineWithPartials | FMSquareWithPartials | FMSawtoothWithPartials | FMTriangleWithPartials;\r\n\r\n/**\r\n * AM Oscillators with partials\r\n */\r\ntype AMSineWithPartials =\r\n\t\"amsine1\" | \"amsine2\" | \"amsine3\" | \"amsine4\" | \"amsine5\" | \"amsine6\" | \"amsine7\" | \"amsine8\" | \"amsine9\" |\r\n\t\"amsine10\" | \"amsine11\" | \"amsine12\" | \"amsine13\" | \"amsine14\" | \"amsine15\" | \"amsine16\" | \"amsine17\" | \"amsine18\" | \"amsine19\" |\r\n\t\"amsine20\" | \"amsine21\" | \"amsine22\" | \"amsine23\" | \"amsine24\" | \"amsine25\" | \"amsine26\" | \"amsine27\" | \"amsine28\" | \"amsine29\" |\r\n\t\"amsine30\" | \"amsine31\" | \"amsine32\";\r\n\r\ntype AMSquareWithPartials =\r\n\t\"amsquare1\" | \"amsquare2\" | \"amsquare3\" | \"amsquare4\" | \"amsquare5\" | \"amsquare6\" | \"amsquare7\" | \"amsquare8\" | \"amsquare9\" |\r\n\t\"amsquare10\" | \"amsquare11\" | \"amsquare12\" | \"amsquare13\" | \"amsquare14\" | \"amsquare15\" | \"amsquare16\" | \"amsquare17\" | \"amsquare18\" | \"amsquare19\" |\r\n\t\"amsquare20\" | \"amsquare21\" | \"amsquare22\" | \"amsquare23\" | \"amsquare24\" | \"amsquare25\" | \"amsquare26\" | \"amsquare27\" | \"amsquare28\" | \"amsquare29\" |\r\n\t\"amsquare30\" | \"amsquare31\" | \"amsquare32\";\r\n\r\ntype AMSawtoothWithPartials =\r\n\t\"amsawtooth1\" | \"amsawtooth2\" | \"amsawtooth3\" | \"amsawtooth4\" | \"amsawtooth5\" | \"amsawtooth6\" | \"amsawtooth7\" | \"amsawtooth8\" | \"amsawtooth9\" |\r\n\t\"amsawtooth10\" | \"amsawtooth11\" | \"amsawtooth12\" | \"amsawtooth13\" | \"amsawtooth14\" | \"amsawtooth15\" | \"amsawtooth16\" | \"amsawtooth17\" | \"amsawtooth18\" | \"amsawtooth19\" |\r\n\t\"amsawtooth20\" | \"amsawtooth21\" | \"amsawtooth22\" | \"amsawtooth23\" | \"amsawtooth24\" | \"amsawtooth25\" | \"amsawtooth26\" | \"amsawtooth27\" | \"amsawtooth28\" | \"amsawtooth29\" |\r\n\t\"amsawtooth30\" | \"amsawtooth31\" | \"amsawtooth32\";\r\n\r\ntype AMTriangleWithPartials =\r\n\t\"amtriangle1\" | \"amtriangle2\" | \"amtriangle3\" | \"amtriangle4\" | \"amtriangle5\" | \"amtriangle6\" | \"amtriangle7\" | \"amtriangle8\" | \"amtriangle9\" |\r\n\t\"amtriangle10\" | \"amtriangle11\" | \"amtriangle12\" | \"amtriangle13\" | \"amtriangle14\" | \"amtriangle15\" | \"amtriangle16\" | \"amtriangle17\" | \"amtriangle18\" | \"amtriangle19\" |\r\n\t\"amtriangle20\" | \"amtriangle21\" | \"amtriangle22\" | \"amtriangle23\" | \"amtriangle24\" | \"amtriangle25\" | \"amtriangle26\" | \"amtriangle27\" | \"amtriangle28\" | \"amtriangle29\" |\r\n\t\"amtriangle30\" | \"amtriangle31\" | \"amtriangle32\";\r\n\r\ntype AMTypeWithPartials = AMSineWithPartials | AMSquareWithPartials | AMSawtoothWithPartials | AMTriangleWithPartials;\r\n\r\n/**\r\n * Fat Oscillators with partials\r\n */\r\ntype FatSineWithPartials =\r\n\t\"fatsine1\" | \"fatsine2\" | \"fatsine3\" | \"fatsine4\" | \"fatsine5\" | \"fatsine6\" | \"fatsine7\" | \"fatsine8\" | \"fatsine9\" |\r\n\t\"fatsine10\" | \"fatsine11\" | \"fatsine12\" | \"fatsine13\" | \"fatsine14\" | \"fatsine15\" | \"fatsine16\" | \"fatsine17\" | \"fatsine18\" | \"fatsine19\" |\r\n\t\"fatsine20\" | \"fatsine21\" | \"fatsine22\" | \"fatsine23\" | \"fatsine24\" | \"fatsine25\" | \"fatsine26\" | \"fatsine27\" | \"fatsine28\" | \"fatsine29\" |\r\n\t\"fatsine30\" | \"fatsine31\" | \"fatsine32\";\r\n\r\ntype FatSquareWithPartials =\r\n\t\"fatsquare1\" | \"fatsquare2\" | \"fatsquare3\" | \"fatsquare4\" | \"fatsquare5\" | \"fatsquare6\" | \"fatsquare7\" | \"fatsquare8\" | \"fatsquare9\" |\r\n\t\"fatsquare10\" | \"fatsquare11\" | \"fatsquare12\" | \"fatsquare13\" | \"fatsquare14\" | \"fatsquare15\" | \"fatsquare16\" | \"fatsquare17\" | \"fatsquare18\" | \"fatsquare19\" |\r\n\t\"fatsquare20\" | \"fatsquare21\" | \"fatsquare22\" | \"fatsquare23\" | \"fatsquare24\" | \"fatsquare25\" | \"fatsquare26\" | \"fatsquare27\" | \"fatsquare28\" | \"fatsquare29\" |\r\n\t\"fatsquare30\" | \"fatsquare31\" | \"fatsquare32\";\r\n\r\ntype FatSawtoothWithPartials =\r\n\t\"fatsawtooth1\" | \"fatsawtooth2\" | \"fatsawtooth3\" | \"fatsawtooth4\" | \"fatsawtooth5\" | \"fatsawtooth6\" | \"fatsawtooth7\" | \"fatsawtooth8\" | \"fatsawtooth9\" |\r\n\t\"fatsawtooth10\" | \"fatsawtooth11\" | \"fatsawtooth12\" | \"fatsawtooth13\" | \"fatsawtooth14\" | \"fatsawtooth15\" | \"fatsawtooth16\" | \"fatsawtooth17\" | \"fatsawtooth18\" | \"fatsawtooth19\" |\r\n\t\"fatsawtooth20\" | \"fatsawtooth21\" | \"fatsawtooth22\" | \"fatsawtooth23\" | \"fatsawtooth24\" | \"fatsawtooth25\" | \"fatsawtooth26\" | \"fatsawtooth27\" | \"fatsawtooth28\" | \"fatsawtooth29\" |\r\n\t\"fatsawtooth30\" | \"fatsawtooth31\" | \"fatsawtooth32\";\r\n\r\ntype FatTriangleWithPartials =\r\n\t\"fattriangle1\" | \"fattriangle2\" | \"fattriangle3\" | \"fattriangle4\" | \"fattriangle5\" | \"fattriangle6\" | \"fattriangle7\" | \"fattriangle8\" | \"fattriangle9\" |\r\n\t\"fattriangle10\" | \"fattriangle11\" | \"fattriangle12\" | \"fattriangle13\" | \"fattriangle14\" | \"fattriangle15\" | \"fattriangle16\" | \"fattriangle17\" | \"fattriangle18\" | \"fattriangle19\" |\r\n\t\"fattriangle20\" | \"fattriangle21\" | \"fattriangle22\" | \"fattriangle23\" | \"fattriangle24\" | \"fattriangle25\" | \"fattriangle26\" | \"fattriangle27\" | \"fattriangle28\" | \"fattriangle29\" |\r\n\t\"fattriangle30\" | \"fattriangle31\" | \"fattriangle32\";\r\n\r\ntype FatTypeWithPartials = FatSineWithPartials | FatSquareWithPartials | FatSawtoothWithPartials | FatTriangleWithPartials;\r\n\r\n/**\r\n * Omni FM\r\n */\r\ninterface OmniFMCustomOscillatorOptions extends FMBaseOscillatorOptions {\r\n\ttype: \"fmcustom\";\r\n\tpartials: number[];\r\n}\r\n\r\ninterface OmniFMTypeOscillatorOptions extends FMBaseOscillatorOptions {\r\n\ttype: \"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\";\r\n\tpartialsCount?: number;\r\n}\r\n\r\ninterface OmniFMPartialsOscillatorOptions extends FMBaseOscillatorOptions {\r\n\ttype: FMTypeWithPartials;\r\n}\r\n\r\n/**\r\n * Omni AM\r\n */\r\ninterface OmniAMCustomOscillatorOptions extends AMBaseOscillatorOptions {\r\n\ttype: \"amcustom\";\r\n\tpartials: number[];\r\n}\r\n\r\ninterface OmniAMTypeOscillatorOptions extends AMBaseOscillatorOptions {\r\n\ttype: \"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\";\r\n\tpartialsCount?: number;\r\n}\r\n\r\ninterface OmniAMPartialsOscillatorOptions extends AMBaseOscillatorOptions {\r\n\ttype: AMTypeWithPartials;\r\n}\r\n\r\n/**\r\n * Omni Fat\r\n */\r\ninterface OmniFatCustomOscillatorOptions extends FatBaseOscillatorOptions {\r\n\ttype: \"fatcustom\";\r\n\tpartials: number[];\r\n}\r\n\r\ninterface OmniFatTypeOscillatorOptions extends FatBaseOscillatorOptions {\r\n\ttype: \"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\";\r\n\tpartialsCount?: number;\r\n}\r\n\r\ninterface OmniFatPartialsOscillatorOptions extends FatBaseOscillatorOptions {\r\n\ttype: FatTypeWithPartials;\r\n}\r\n\r\nexport type OmniOscillatorType =\r\n\t\"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\" | \"fatcustom\" | FatTypeWithPartials |\r\n\t\"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\" | \"fmcustom\" | FMTypeWithPartials |\r\n\t\"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\" | \"amcustom\" | AMTypeWithPartials |\r\n\tTypeWithPartials | OscillatorType | \"pulse\" | \"pwm\";\r\n\r\nexport type OmniOscillatorConstructorOptions =\r\n\tPulseOscillatorOptions | PWMOscillatorOptions |\r\n\tOmniFatCustomOscillatorOptions | OmniFatTypeOscillatorOptions | OmniFatPartialsOscillatorOptions |\r\n\tOmniFMCustomOscillatorOptions | OmniFMTypeOscillatorOptions | OmniFMPartialsOscillatorOptions |\r\n\tOmniAMCustomOscillatorOptions | OmniAMTypeOscillatorOptions | OmniAMPartialsOscillatorOptions |\r\n\tToneOscillatorConstructorOptions;\r\n\r\n// export type OmniOscillatorSourceOptions = OmniOscillatorConstructorOptions & SourceOptions;\r\n\r\nexport type OmniOscillatorOptions =\r\n\tPulseOscillatorOptions & PWMOscillatorOptions &\r\n\tOmniFatCustomOscillatorOptions & OmniFatTypeOscillatorOptions & OmniFatPartialsOscillatorOptions &\r\n\tOmniFMCustomOscillatorOptions & OmniFMTypeOscillatorOptions & OmniFMPartialsOscillatorOptions &\r\n\tOmniAMCustomOscillatorOptions & OmniAMTypeOscillatorOptions & OmniAMPartialsOscillatorOptions &\r\n\tToneOscillatorConstructorOptions;\r\n\r\ntype OmitSourceOptions<T extends BaseOscillatorOptions> = Omit<T, \"frequency\" | \"detune\" | \"context\">;\r\n\r\n/**\r\n * The settable options for the omni oscillator inside of the source which excludes certain attributes that are defined by the parent class\r\n */\r\nexport type OmniOscillatorSynthOptions =\r\n\tOmitSourceOptions<PulseOscillatorOptions> | OmitSourceOptions<PWMOscillatorOptions> |\r\n\tOmitSourceOptions<OmniFatCustomOscillatorOptions> | OmitSourceOptions<OmniFatTypeOscillatorOptions> | OmitSourceOptions<OmniFatPartialsOscillatorOptions> |\r\n\tOmitSourceOptions<OmniFMCustomOscillatorOptions> | OmitSourceOptions<OmniFMTypeOscillatorOptions> | OmitSourceOptions<OmniFMPartialsOscillatorOptions> |\r\n\tOmitSourceOptions<OmniAMCustomOscillatorOptions> | OmitSourceOptions<OmniAMTypeOscillatorOptions> | OmitSourceOptions<OmniAMPartialsOscillatorOptions> |\r\n\tOmitSourceOptions<ToneCustomOscillatorOptions> | OmitSourceOptions<ToneTypeOscillatorOptions> | OmitSourceOptions<TonePartialOscillatorOptions>\r\n"},"lineCount":null}},"error":null,"hash":"ad40902f1d355692e231be9781a92230","cacheData":{"env":{}}}