{"id":"../node_modules/tone/build/esm/component/analysis/DCMeter.js","dependencies":[{"name":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\build\\esm\\component\\analysis\\DCMeter.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\Tone\\component\\analysis\\DCMeter.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\natal\\Documents\\chord-holder-v1\\package.json","includedInParent":true,"mtime":1596313178655},{"name":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\package.json","includedInParent":true,"mtime":1596312949653},{"name":"../../core/util/Defaults","loc":{"line":1,"column":37},"parent":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\build\\esm\\component\\analysis\\DCMeter.js","resolved":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\build\\esm\\core\\util\\Defaults.js"},{"name":"./MeterBase","loc":{"line":2,"column":26},"parent":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\build\\esm\\component\\analysis\\DCMeter.js","resolved":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\build\\esm\\component\\analysis\\MeterBase.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DCMeter = void 0;\n\nvar _Defaults = require(\"../../core/util/Defaults\");\n\nvar _MeterBase = require(\"./MeterBase\");\n\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * const meter = new Tone.DCMeter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\nclass DCMeter extends _MeterBase.MeterBase {\n  constructor() {\n    super((0, _Defaults.optionsFromArguments)(DCMeter.getDefaults(), arguments));\n    this.name = \"DCMeter\";\n    this._analyser.type = \"waveform\";\n    this._analyser.size = 256;\n  }\n  /**\n   * Get the signal value of the incoming signal\n   */\n\n\n  getValue() {\n    const value = this._analyser.getValue();\n\n    return value[0];\n  }\n\n}\n\nexports.DCMeter = DCMeter;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":25,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":19,"column":13},"generated":{"line":25,"column":6}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":25,"column":13}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":25,"column":22}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":25,"column":42}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":19,"column":54},"generated":{"line":25,"column":43}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":24,"column":1},"generated":{"line":26,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":24,"column":1},"generated":{"line":26,"column":2}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":24,"column":1},"generated":{"line":26,"column":13}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":24,"column":1},"generated":{"line":26,"column":16}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":27,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":27,"column":10}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":25,"column":29},"generated":{"line":27,"column":46}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":25,"column":36},"generated":{"line":27,"column":53}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":25,"column":37},"generated":{"line":27,"column":54}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":25,"column":29},"generated":{"line":27,"column":65}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":27,"column":67}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":25,"column":52},"generated":{"line":27,"column":69}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":27,"column":78}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":27,"column":79}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":21,"column":10},"generated":{"line":28,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":21,"column":10},"generated":{"line":28,"column":9}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":21,"column":10},"generated":{"line":28,"column":13}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":21,"column":25},"generated":{"line":28,"column":16}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":21,"column":10},"generated":{"line":28,"column":25}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":29,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":27,"column":7},"generated":{"line":29,"column":9}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":29,"column":18}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":27,"column":17},"generated":{"line":29,"column":19}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":29,"column":23}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":27,"column":24},"generated":{"line":29,"column":26}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":29,"column":36}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":30,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":28,"column":7},"generated":{"line":30,"column":9}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":30,"column":18}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":28,"column":17},"generated":{"line":30,"column":19}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":30,"column":23}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":28,"column":24},"generated":{"line":30,"column":26}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":30,"column":29}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":31,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":31,"column":1},"generated":{"line":32,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":37,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":37,"column":2}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":37,"column":10}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":37,"column":13}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":35,"column":8},"generated":{"line":38,"column":10}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":38,"column":15}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":35,"column":16},"generated":{"line":38,"column":18}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":35,"column":21},"generated":{"line":38,"column":23}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":35,"column":16},"generated":{"line":38,"column":32}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":35,"column":31},"generated":{"line":38,"column":33}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":35,"column":16},"generated":{"line":38,"column":41}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":38,"column":43}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":40,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":40,"column":11}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":36,"column":14},"generated":{"line":40,"column":16}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":36,"column":15},"generated":{"line":40,"column":17}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":36,"column":14},"generated":{"line":40,"column":18}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":40,"column":19}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":41,"column":0}},{"source":"../../../../Tone/component/analysis/DCMeter.ts","name":null,"original":{"line":19,"column":54},"generated":{"line":43,"column":0}}],"sources":{"../../../../Tone/component/analysis/DCMeter.ts":"import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase, MeterBaseOptions } from \"./MeterBase\";\n\nexport type DCMeterOptions = MeterBaseOptions;\n\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * const meter = new Tone.DCMeter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\nexport class DCMeter extends MeterBase<DCMeterOptions> {\n\n\treadonly name: string = \"DCMeter\";\n\n\tconstructor(options?: Partial<DCMeterOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(DCMeter.getDefaults(), arguments));\n\n\t\tthis._analyser.type = \"waveform\";\n\t\tthis._analyser.size = 256;\n\t}\n\n\t/**\n\t * Get the signal value of the incoming signal\n\t */\n\tgetValue(): number {\n\t\tconst value = this._analyser.getValue() as Float32Array;\n\t\treturn value[0];\n\t}\n}\n"},"lineCount":null}},"error":null,"hash":"a48fcc548273595eea6f19273d6e6d8e","cacheData":{"env":{}}}