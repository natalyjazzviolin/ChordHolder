{"id":"../node_modules/@tonaljs/key/dist/index.es.js","dependencies":[{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\@tonaljs\\key\\dist\\index.es.js.map","includedInParent":true,"mtime":1596323947638},{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\package.json","includedInParent":true,"mtime":1596323959438},{"name":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\@tonaljs\\key\\package.json","includedInParent":true,"mtime":1596323947640},{"name":"@tonaljs/core","loc":{"line":1,"column":52},"parent":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\@tonaljs\\key\\dist\\index.es.js","resolved":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\@tonaljs\\core\\dist\\index.es.js"},{"name":"@tonaljs/note","loc":{"line":2,"column":32},"parent":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\@tonaljs\\key\\dist\\index.es.js","resolved":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\@tonaljs\\note\\dist\\index.es.js"},{"name":"@tonaljs/roman-numeral","loc":{"line":3,"column":20},"parent":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\@tonaljs\\key\\dist\\index.es.js","resolved":"C:\\Projects\\ChordHolder\\ChordHolder\\node_modules\\@tonaljs\\roman-numeral\\dist\\index.es.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.majorKey = majorKey;\nexports.majorTonicFromKeySignature = majorTonicFromKeySignature;\nexports.minorKey = minorKey;\nexports.default = void 0;\n\nvar _core = require(\"@tonaljs/core\");\n\nvar _note = require(\"@tonaljs/note\");\n\nvar _romanNumeral = require(\"@tonaljs/roman-numeral\");\n\nconst Empty = Object.freeze([]);\nconst NoKey = {\n  type: \"major\",\n  tonic: \"\",\n  alteration: 0,\n  keySignature: \"\"\n};\nconst NoKeyScale = {\n  tonic: \"\",\n  grades: Empty,\n  intervals: Empty,\n  scale: Empty,\n  chords: Empty,\n  chordsHarmonicFunction: Empty,\n  chordScales: Empty\n};\nconst NoMajorKey = { ...NoKey,\n  ...NoKeyScale,\n  type: \"major\",\n  minorRelative: \"\",\n  scale: Empty,\n  secondaryDominants: Empty,\n  secondaryDominantsMinorRelative: Empty,\n  substituteDominants: Empty,\n  substituteDominantsMinorRelative: Empty\n};\nconst NoMinorKey = { ...NoKey,\n  type: \"minor\",\n  relativeMajor: \"\",\n  natural: NoKeyScale,\n  harmonic: NoKeyScale,\n  melodic: NoKeyScale\n};\n\nconst mapScaleToType = (scale, list, sep = \"\") => list.map((type, i) => `${scale[i]}${sep}${type}`);\n\nfunction keyScale(grades, chords, harmonicFunctions, chordScales) {\n  return tonic => {\n    const intervals = grades.map(gr => (0, _romanNumeral.get)(gr).interval || \"\");\n    const scale = intervals.map(interval => (0, _core.transpose)(tonic, interval));\n    return {\n      tonic,\n      grades,\n      intervals,\n      scale,\n      chords: mapScaleToType(scale, chords),\n      chordsHarmonicFunction: mapScaleToType(scale, harmonicFunctions),\n      chordScales: mapScaleToType(scale, chordScales, \" \")\n    };\n  };\n}\n\nconst distInFifths = (from, to) => {\n  const f = (0, _core.note)(from);\n  const t = (0, _core.note)(to);\n  return f.empty || t.empty ? 0 : t.coord[0] - f.coord[0];\n};\n\nconst MajorScale = keyScale(\"I II III IV V VI VII\".split(\" \"), \"maj7 m7 m7 maj7 7 m7 m7b5\".split(\" \"), \"T SD T SD D T D\".split(\" \"), \"major,dorian,phrygian,lydian,mixolydian,minor,locrian\".split(\",\"));\nconst NaturalScale = keyScale(\"I II bIII IV V bVI bVII\".split(\" \"), \"m7 m7b5 maj7 m7 m7 maj7 7\".split(\" \"), \"T SD T SD D SD SD\".split(\" \"), \"minor,locrian,major,dorian,phrygian,lydian,mixolydian\".split(\",\"));\nconst HarmonicScale = keyScale(\"I II bIII IV V bVI VII\".split(\" \"), \"mMaj7 m7b5 +maj7 m7 7 maj7 o7\".split(\" \"), \"T SD T SD D SD D\".split(\" \"), \"harmonic minor,locrian 6,major augmented,lydian diminished,phrygian dominant,lydian #9,ultralocrian\".split(\",\"));\nconst MelodicScale = keyScale(\"I II bIII IV V VI VII\".split(\" \"), \"m6 m7 +maj7 7 7 m7b5 m7b5\".split(\" \"), \"T SD T SD D - -\".split(\" \"), \"melodic minor,dorian b2,lydian augmented,lydian dominant,mixolydian b6,locrian #2,altered\".split(\",\"));\n/**\r\n * Get a major key properties in a given tonic\r\n * @param tonic\r\n */\n\nfunction majorKey(tonic) {\n  const pc = (0, _core.note)(tonic).pc;\n  if (!pc) return NoMajorKey;\n  const keyScale = MajorScale(pc);\n  const alteration = distInFifths(\"C\", pc);\n\n  const romanInTonic = src => {\n    const r = (0, _romanNumeral.get)(src);\n    if (r.empty) return \"\";\n    return (0, _core.transpose)(tonic, r.interval) + r.chordType;\n  };\n\n  return { ...keyScale,\n    type: \"major\",\n    minorRelative: (0, _core.transpose)(pc, \"-3m\"),\n    alteration,\n    keySignature: (0, _core.altToAcc)(alteration),\n    secondaryDominants: \"- VI7 VII7 I7 II7 III7 -\".split(\" \").map(romanInTonic),\n    secondaryDominantsMinorRelative: \"- IIIm7b5 IV#m7 Vm7 VIm7 VIIm7b5 -\".split(\" \").map(romanInTonic),\n    substituteDominants: \"- bIII7 IV7 bV7 bVI7 bVII7 -\".split(\" \").map(romanInTonic),\n    substituteDominantsMinorRelative: \"- IIIm7 Im7 IIbm7 VIm7 IVm7 -\".split(\" \").map(romanInTonic)\n  };\n}\n/**\r\n * Get minor key properties in a given tonic\r\n * @param tonic\r\n */\n\n\nfunction minorKey(tnc) {\n  const pc = (0, _core.note)(tnc).pc;\n  if (!pc) return NoMinorKey;\n  const alteration = distInFifths(\"C\", pc) - 3;\n  return {\n    type: \"minor\",\n    tonic: pc,\n    relativeMajor: (0, _core.transpose)(pc, \"3m\"),\n    alteration,\n    keySignature: (0, _core.altToAcc)(alteration),\n    natural: NaturalScale(pc),\n    harmonic: HarmonicScale(pc),\n    melodic: MelodicScale(pc)\n  };\n}\n/**\r\n * Given a key signature, returns the tonic of the major key\r\n * @param sigature\r\n * @example\r\n * majorTonicFromKeySignature('###') // => 'A'\r\n */\n\n\nfunction majorTonicFromKeySignature(sig) {\n  if (typeof sig === \"number\") {\n    return (0, _note.transposeFifths)(\"C\", sig);\n  } else if (typeof sig === \"string\" && /^b+|#+$/.test(sig)) {\n    return (0, _note.transposeFifths)(\"C\", (0, _core.accToAlt)(sig));\n  }\n\n  return null;\n}\n\nvar index = {\n  majorKey,\n  majorTonicFromKeySignature,\n  minorKey\n};\nvar _default = index;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"1f87edbf264f4f20857907b1552e5d96","cacheData":{"env":{}}}