{"id":"FxHs","dependencies":[{"name":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\build\\esm\\core\\worklet\\ToneAudioWorkletProcessor.worklet.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\Tone\\core\\worklet\\ToneAudioWorkletProcessor.worklet.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\natal\\Documents\\chord-holder-v1\\package.json","includedInParent":true,"mtime":1596313565786},{"name":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\package.json","includedInParent":true,"mtime":1596312949653},{"name":"./WorkletGlobalScope","loc":{"line":1,"column":29},"parent":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\build\\esm\\core\\worklet\\ToneAudioWorkletProcessor.worklet.js","resolved":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\tone\\build\\esm\\core\\worklet\\WorkletGlobalScope.js"}],"generated":{"js":"\"use strict\";var t=require(\"./WorkletGlobalScope\");const e='\\n\\t/**\\n\\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \\n\\t */\\n\\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\\n\\n\\t\\tconstructor(options) {\\n\\t\\t\\t\\n\\t\\t\\tsuper(options);\\n\\t\\t\\t/**\\n\\t\\t\\t * If the processor was disposed or not. Keep alive until it\\'s disposed.\\n\\t\\t\\t */\\n\\t\\t\\tthis.disposed = false;\\n\\t\\t   \\t/** \\n\\t\\t\\t * The number of samples in the processing block\\n\\t\\t\\t */\\n\\t\\t\\tthis.blockSize = 128;\\n\\t\\t\\t/**\\n\\t\\t\\t * the sample rate\\n\\t\\t\\t */\\n\\t\\t\\tthis.sampleRate = sampleRate;\\n\\n\\t\\t\\tthis.port.onmessage = (event) => {\\n\\t\\t\\t\\t// when it receives a dispose \\n\\t\\t\\t\\tif (event.data === \"dispose\") {\\n\\t\\t\\t\\t\\tthis.disposed = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t}\\n\\t}\\n';(0,t.addToWorklet)(e);"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":17}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":19}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":27}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":51}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":1,"column":57}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":3,"column":51},"generated":{"line":1,"column":59}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":1,"column":822}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":1,"column":824}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":1,"column":826}},{"source":"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":1,"column":840}}],"sources":{"../../../../Tone/core/worklet/ToneAudioWorkletProcessor.worklet.ts":"import { addToWorklet } from \"./WorkletGlobalScope\";\n\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\n\naddToWorklet(toneAudioWorkletProcessor);\n"},"lineCount":null}},"error":null,"hash":"80417ac92f84026c49077eeafd2959ad","cacheData":{"env":{}}}