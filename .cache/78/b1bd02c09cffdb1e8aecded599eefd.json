{"id":"g0ez","dependencies":[{"name":"C:\\Users\\natal\\Documents\\chord-holder-v1\\package.json","includedInParent":true,"mtime":1596313565786},{"name":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\standardized-audio-context\\package.json","includedInParent":true,"mtime":1596313178617},{"name":"../factories/invalid-state-error","loc":{"line":1,"column":40},"parent":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\standardized-audio-context\\build\\es2019\\helpers\\wrap-channel-splitter-node.js","resolved":"C:\\Users\\natal\\Documents\\chord-holder-v1\\node_modules\\standardized-audio-context\\build\\es2019\\factories\\invalid-state-error.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.wrapChannelSplitterNode=void 0;var e=require(\"../factories/invalid-state-error\");const t=t=>{const r=t.numberOfOutputs;Object.defineProperty(t,\"channelCount\",{get:()=>r,set:t=>{if(t!==r)throw(0,e.createInvalidStateError)()}}),Object.defineProperty(t,\"channelCountMode\",{get:()=>\"explicit\",set:t=>{if(\"explicit\"!==t)throw(0,e.createInvalidStateError)()}}),Object.defineProperty(t,\"channelInterpretation\",{get:()=>\"discrete\",set:t=>{if(\"discrete\"!==t)throw(0,e.createInvalidStateError)()}})};exports.wrapChannelSplitterNode=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":0}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":13}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":20}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":35}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":43}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":56}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":57}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":64}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":68}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":76}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":105}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":1,"column":0},"generated":{"line":1,"column":111}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":1,"column":0},"generated":{"line":1,"column":113}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":1,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":157}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"wrapChannelSplitterNode","original":{"line":2,"column":13},"generated":{"line":1,"column":163}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"channelSplitterNode","original":{"line":2,"column":40},"generated":{"line":1,"column":165}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"channelCount","original":{"line":3,"column":10},"generated":{"line":1,"column":169}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"channelCount","original":{"line":3,"column":10},"generated":{"line":1,"column":175}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"channelSplitterNode","original":{"line":3,"column":25},"generated":{"line":1,"column":177}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"numberOfOutputs","original":{"line":3,"column":45},"generated":{"line":1,"column":179}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"Object","original":{"line":5,"column":4},"generated":{"line":1,"column":195}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"defineProperty","original":{"line":5,"column":11},"generated":{"line":1,"column":202}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"channelSplitterNode","original":{"line":5,"column":26},"generated":{"line":1,"column":217}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":5,"column":47},"generated":{"line":1,"column":219}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":5,"column":63},"generated":{"line":1,"column":234}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"get","original":{"line":6,"column":8},"generated":{"line":1,"column":235}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":6,"column":13},"generated":{"line":1,"column":239}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"channelCount","original":{"line":6,"column":19},"generated":{"line":1,"column":243}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"set","original":{"line":7,"column":8},"generated":{"line":1,"column":245}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"value","original":{"line":7,"column":14},"generated":{"line":1,"column":249}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"value","original":{"line":8,"column":16},"generated":{"line":1,"column":253}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"value","original":{"line":8,"column":16},"generated":{"line":1,"column":256}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"channelCount","original":{"line":8,"column":26},"generated":{"line":1,"column":260}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":9,"column":22},"generated":{"line":1,"column":262}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":9,"column":22},"generated":{"line":1,"column":268}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":9,"column":16},"generated":{"line":1,"column":270}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":9,"column":16},"generated":{"line":1,"column":272}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"Object","original":{"line":17,"column":4},"generated":{"line":1,"column":302}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"defineProperty","original":{"line":17,"column":11},"generated":{"line":1,"column":309}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"channelSplitterNode","original":{"line":17,"column":26},"generated":{"line":1,"column":324}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":17,"column":47},"generated":{"line":1,"column":326}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":17,"column":67},"generated":{"line":1,"column":345}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"get","original":{"line":18,"column":8},"generated":{"line":1,"column":346}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":18,"column":13},"generated":{"line":1,"column":350}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":18,"column":19},"generated":{"line":1,"column":354}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"set","original":{"line":19,"column":8},"generated":{"line":1,"column":365}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"value","original":{"line":19,"column":14},"generated":{"line":1,"column":369}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"value","original":{"line":20,"column":16},"generated":{"line":1,"column":373}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":20,"column":26},"generated":{"line":1,"column":376}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"value","original":{"line":20,"column":16},"generated":{"line":1,"column":389}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":21,"column":22},"generated":{"line":1,"column":391}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":21,"column":22},"generated":{"line":1,"column":397}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":21,"column":16},"generated":{"line":1,"column":399}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":21,"column":16},"generated":{"line":1,"column":401}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"Object","original":{"line":29,"column":4},"generated":{"line":1,"column":431}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"defineProperty","original":{"line":29,"column":11},"generated":{"line":1,"column":438}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"channelSplitterNode","original":{"line":29,"column":26},"generated":{"line":1,"column":453}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":29,"column":47},"generated":{"line":1,"column":455}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":29,"column":72},"generated":{"line":1,"column":479}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"get","original":{"line":30,"column":8},"generated":{"line":1,"column":480}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":30,"column":13},"generated":{"line":1,"column":484}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":30,"column":19},"generated":{"line":1,"column":488}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"set","original":{"line":31,"column":8},"generated":{"line":1,"column":499}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"value","original":{"line":31,"column":14},"generated":{"line":1,"column":503}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"value","original":{"line":32,"column":16},"generated":{"line":1,"column":507}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":32,"column":26},"generated":{"line":1,"column":510}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","name":"value","original":{"line":32,"column":16},"generated":{"line":1,"column":523}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":33,"column":22},"generated":{"line":1,"column":525}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":33,"column":22},"generated":{"line":1,"column":531}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":33,"column":16},"generated":{"line":1,"column":533}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":33,"column":16},"generated":{"line":1,"column":535}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":566}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":574}},{"source":"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","original":{"line":2,"column":7},"generated":{"line":1,"column":598}}],"sources":{"../node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js":"import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    /*\n     * Bug #30: Only Chrome, Firefox & Opera throw an error when attempting to change the channelCountMode to something other than\n     * explicit.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    /*\n     * Bug #32: Only Chrome, Firefox & Opera throws an error when attempting to change the channelInterpretation to something other than\n     * discrete.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n"},"lineCount":null}},"error":null,"hash":"98c3f1a1985d15b80c6ce67a8fae5fb8","cacheData":{"env":{}}}